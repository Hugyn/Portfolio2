[{"D:\\Hugo\\portfolio\\src\\index.js":"1","D:\\Hugo\\portfolio\\src\\reportWebVitals.js":"2","D:\\Hugo\\portfolio\\src\\Portfolio.jsx":"3","D:\\Hugo\\portfolio\\src\\components\\sideNav\\SideNav.jsx":"4","D:\\Hugo\\portfolio\\src\\components\\name\\Name.jsx":"5","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\NavigationBox.jsx":"6","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\NavButtons.jsx":"7","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\Home\\Home.jsx":"8","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\home\\Home.jsx":"9","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\about\\About.jsx":"10","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\myWork\\MyWork.jsx":"11","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\contact\\Contact.jsx":"12","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\index.js":"13","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\reportWebVitals.js":"14","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\Portfolio.jsx":"15","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\name\\Name.jsx":"16","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\sideNav\\SideNav.jsx":"17","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\NavigationBox.jsx":"18","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\NavButtons.jsx":"19","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\myWork\\MyWork.jsx":"20","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\home\\Home.jsx":"21","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\about\\About.jsx":"22","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\contact\\Contact.jsx":"23"},{"size":517,"mtime":1611400778284,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":330,"mtime":1612530882704,"results":"27","hashOfConfig":"25"},{"size":3107,"mtime":1612362898013,"results":"28","hashOfConfig":"25"},{"size":1837,"mtime":1612203595211,"results":"29","hashOfConfig":"25"},{"size":904,"mtime":1612532896996,"results":"30","hashOfConfig":"25"},{"size":713,"mtime":1612540066794,"results":"31","hashOfConfig":"25"},{"size":159,"mtime":1612531274205,"results":"32","hashOfConfig":"25"},{"size":159,"mtime":1612531274205,"results":"33","hashOfConfig":"25"},{"size":162,"mtime":1612531398891,"results":"34","hashOfConfig":"25"},{"size":161,"mtime":1612531406863,"results":"35","hashOfConfig":"25"},{"size":168,"mtime":1612531403421,"results":"36","hashOfConfig":"25"},{"size":517,"mtime":1612540532000,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1612540532000,"results":"39","hashOfConfig":"38"},{"size":330,"mtime":1612540532000,"results":"40","hashOfConfig":"38"},{"size":1775,"mtime":1612540532000,"results":"41","hashOfConfig":"38"},{"size":3023,"mtime":1612540532000,"results":"42","hashOfConfig":"38"},{"size":882,"mtime":1615388117812,"results":"43","hashOfConfig":"38"},{"size":2808,"mtime":1615388314367,"results":"44","hashOfConfig":"38"},{"size":150,"mtime":1612540532000,"results":"45","hashOfConfig":"38"},{"size":171,"mtime":1615389921202,"results":"46","hashOfConfig":"38"},{"size":151,"mtime":1612540532000,"results":"47","hashOfConfig":"38"},{"size":157,"mtime":1612540532000,"results":"48","hashOfConfig":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"14y3ud3",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"bgzoik",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Hugo\\portfolio\\src\\index.js",[],["103","104"],"D:\\Hugo\\portfolio\\src\\reportWebVitals.js",[],"D:\\Hugo\\portfolio\\src\\Portfolio.jsx",[],"D:\\Hugo\\portfolio\\src\\components\\sideNav\\SideNav.jsx",["105"],"import React, {useState, useEffect} from 'react'\r\nimport \"./SideNav-style.css\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nfunction SideNav() {\r\n    const[index, setIndex] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [leterIndex, setLeterIndex] = useState(0)\r\n    const [word, setWord] = useState('')\r\n    const alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"H\",\"m\",\"n\",\"o\",\"I\",\"p\",\"q\",\"r\",\"s\",\"L\",\"t\",\"G\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\".\"];\r\n    const [socialMedia, setSocialMedia] = useState('')\r\n\r\n    useEffect(()=> {\r\n\r\n        const id = window.setInterval(()=>{  \r\n            if(isRunning && index !== 30){\r\n                setIndex(()=> index + 1)\r\n                if(alphabet[index] === socialMedia[leterIndex]){\r\n                    const leter = socialMedia[leterIndex]\r\n                    setWord(word.concat(leter))\r\n                   console.log(word)\r\n                   setIndex(0)\r\n              setLeterIndex(()=> leterIndex + 1)\r\n                }if(word.length === socialMedia.length - 1){\r\n                   setIndex(30)\r\n                   setIsRunning(false)\r\n                }\r\n        }\r\n        },10)\r\n        return  ()=> window.clearInterval(id)\r\n        \r\n    },[index, isRunning, leterIndex])\r\n\r\n    return (\r\n    <div className=\"blackNav\">\r\n        <motion.div className=\"socialMediaContainer\"\r\n        initial ={{y: -800, opacity: 0}}\r\n        animate={{y: -100, opacity: 1}}\r\n        transition={{duration: 3}}\r\n        >\r\n            <motion.li className=\" socialMedia fab fa-instagram\"\r\n                whileHover={{width: '10vw'}}\r\n                onMouseOver={()=> {\r\n                    setIsRunning(true)\r\n                   setSocialMedia('Instagram.')\r\n                }}\r\n                onMouseLeave={()=> {\r\n                    setIsRunning(false)\r\n                    setIndex(0)\r\n                    setLeterIndex(0)\r\n                    setWord('')\r\n                }}><span>{word + alphabet[index]}</span></motion.li>\r\n\r\n            <motion.li className=\"socialMedia fab fa-github\"\r\n                whileHover={{width: '10vw'}}\r\n                onMouseOver={()=> {\r\n                    setIsRunning(true)\r\n                    setSocialMedia('Github.')\r\n                }}\r\n                onMouseLeave={()=> {\r\n                    setIsRunning(false)\r\n                    setIndex(0)\r\n                    setLeterIndex(0)\r\n                    setWord('')\r\n                }}><span>{word + alphabet[index]}</span></motion.li>\r\n\r\n            <motion.li className=\"socialMedia fab fa-linkedin-in\"\r\n                whileHover={{width: '10vw'}}\r\n                onMouseOver={()=> {\r\n                    setIsRunning(true)\r\n                    setSocialMedia('Linkedin.')\r\n                }}\r\n                onMouseLeave={()=> {\r\n                    setIsRunning(false)\r\n                    setIndex(0)\r\n                    setLeterIndex(0)\r\n                    setWord('')\r\n                }}><span>{word + alphabet[index]}</span></motion.li>\r\n        </motion.div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","D:\\Hugo\\portfolio\\src\\components\\name\\Name.jsx",["106"],"import React, {useEffect, useState} from 'react'\r\nimport \"./Name-style.css\"\r\nimport Tilt from 'react-tilt'\r\nimport { motion } from \"framer-motion\"\r\n\r\n\r\n\r\n\r\nfunction Name() {\r\n\r\n    const [index, setIndex] = useState(0)\r\n    const [leterIndex, setLeterIndex] = useState(0)\r\n    const [word, setWord] = useState(\"\")\r\n    const [isRunning, setIsRunning] = useState(true);\r\n\r\n    const alphabet = [\"a\",\"b\",\"c\",\"d\",\"D\",\"e\",\"F\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"H\",\"m\",\"n\",\"o\",\"I\",\"p\",\"q\",\"r\",\"a\",\"s\",\"L\",\"t\",\"G\",\"u\",\"v\",\"S\",\"w\",\"x\",\"y\",\"z\",\".\",\" \"];\r\n\r\n\r\n    const fullStack = \"Full Stack De\"\r\n   \r\n\r\n    useEffect(()=>{\r\n       const id = window.setInterval(()=>{\r\n           if(isRunning){\r\n            setIndex(()=> index + 1)\r\n            if(alphabet[index] === fullStack[leterIndex]){\r\n                setWord(word.concat(fullStack[leterIndex]))\r\n                setIndex(0);\r\n                setLeterIndex(()=> leterIndex + 1)\r\n            }if(word.length === fullStack.length){\r\n                setIndex(28)\r\n                setIsRunning(false)\r\n             }\r\n           }\r\n            \r\n            \r\n            \r\n        },5)\r\n        return ()=> window.clearInterval(id)\r\n    },[index, leterIndex, word])\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <motion.div initial={{opacity: 0}}\r\n                        animate={{opacity: 1}} \r\n                        transition={{duration: 5}}   \r\n            >\r\n            <Tilt className=\"name\" options={{max:50}}>Hugo Nathan</Tilt></motion.div>\r\n            <motion.h1 className=\"dev\"\r\n                       initial={{opacity: 0}}\r\n                       animate={{opacity: 1}}\r\n                       transition={{duration: 3}}\r\n            >\r\n            {word + alphabet[index]}</motion.h1>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Name\r\n","D:\\Hugo\\portfolio\\src\\components\\navigationBox\\NavigationBox.jsx",[],"D:\\Hugo\\portfolio\\src\\components\\navigationBox\\NavButtons.jsx",["107"],"D:\\Hugo\\portfolio\\src\\components\\navigationBox\\Home\\Home.jsx",[],"D:\\Hugo\\portfolio\\src\\components\\navigationBox\\home\\Home.jsx",[],"D:\\Hugo\\portfolio\\src\\components\\navigationBox\\about\\About.jsx",[],"D:\\Hugo\\portfolio\\src\\components\\navigationBox\\myWork\\MyWork.jsx",[],"D:\\Hugo\\portfolio\\src\\components\\navigationBox\\contact\\Contact.jsx",[],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\index.js",[],["108","109"],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\Portfolio.jsx",[],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\name\\Name.jsx",["110"],"import React, {useEffect, useState} from 'react'\nimport \"./Name-style.css\"\nimport Tilt from 'react-tilt'\nimport { motion } from \"framer-motion\"\n\n\n\n\nfunction Name() {\n\n    const [index, setIndex] = useState(0)\n    const [leterIndex, setLeterIndex] = useState(0)\n    const [word, setWord] = useState(\"\")\n    const [isRunning, setIsRunning] = useState(true);\n\n    const alphabet = [\"a\",\"b\",\"c\",\"d\",\"D\",\"e\",\"F\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"H\",\"m\",\"n\",\"o\",\"I\",\"p\",\"q\",\"r\",\"a\",\"s\",\"L\",\"t\",\"G\",\"u\",\"v\",\"S\",\"w\",\"x\",\"y\",\"z\",\".\",\" \"];\n\n\n    const fullStack = \"Full Stack De\"\n   \n\n    useEffect(()=>{\n       const id = window.setInterval(()=>{\n           if(isRunning){\n            setIndex(()=> index + 1)\n            if(alphabet[index] === fullStack[leterIndex]){\n                setWord(word.concat(fullStack[leterIndex]))\n                setIndex(0);\n                setLeterIndex(()=> leterIndex + 1)\n            }if(word.length === fullStack.length){\n                setIndex(28)\n                setIsRunning(false)\n             }\n           }\n            \n            \n            \n        },5)\n        return ()=> window.clearInterval(id)\n    },[index, leterIndex, word])\n\n\n    return (\n        \n        <div className=\"container\">\n            <motion.div initial={{opacity: 0}}\n                        animate={{opacity: 1}} \n                        transition={{duration: 5}}   \n            >\n            <Tilt className=\"name\" options={{max:50}}>Hugo Nathan</Tilt></motion.div>\n            <motion.h1 className=\"dev\"\n                       initial={{opacity: 0}}\n                       animate={{opacity: 1}}\n                       transition={{duration: 3}}\n            >\n            {word + alphabet[index]}</motion.h1>\n        </div>\n        \n    )\n}\n\nexport default Name\n","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\sideNav\\SideNav.jsx",["111"],"import React, {useState, useEffect} from 'react'\nimport \"./SideNav-style.css\"\nimport { motion } from \"framer-motion\"\n\nfunction SideNav() {\n    const[index, setIndex] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n    const [leterIndex, setLeterIndex] = useState(0)\n    const [word, setWord] = useState('')\n    const alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"H\",\"m\",\"n\",\"o\",\"I\",\"p\",\"q\",\"r\",\"s\",\"L\",\"t\",\"G\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\".\"];\n    const [socialMedia, setSocialMedia] = useState('')\n\n    useEffect(()=> {\n\n        const id = window.setInterval(()=>{  \n            if(isRunning && index !== 30){\n                setIndex(()=> index + 1)\n                if(alphabet[index] === socialMedia[leterIndex]){\n                    const leter = socialMedia[leterIndex]\n                    setWord(word.concat(leter))\n                   console.log(word)\n                   setIndex(0)\n              setLeterIndex(()=> leterIndex + 1)\n                }if(word.length === socialMedia.length - 1){\n                   setIndex(30)\n                   setIsRunning(false)\n                }\n        }\n        },10)\n        return  ()=> window.clearInterval(id)\n        \n    },[index, isRunning, leterIndex])\n\n    return (\n    <div className=\"blackNav\">\n        <motion.div className=\"socialMediaContainer\"\n        initial ={{y: -800, opacity: 0}}\n        animate={{y: -100, opacity: 1}}\n        transition={{duration: 3}}\n        >\n            <motion.li className=\" socialMedia fab fa-instagram\"\n                whileHover={{width: '10vw'}}\n                onMouseOver={()=> {\n                    setIsRunning(true)\n                   setSocialMedia('Instagram.')\n                }}\n                onMouseLeave={()=> {\n                    setIsRunning(false)\n                    setIndex(0)\n                    setLeterIndex(0)\n                    setWord('')\n                }}><span>{word + alphabet[index]}</span></motion.li>\n\n            <motion.li className=\"socialMedia fab fa-github\"\n                whileHover={{width: '10vw'}}\n                onMouseOver={()=> {\n                    setIsRunning(true)\n                    setSocialMedia('Github.')\n                }}\n                onMouseLeave={()=> {\n                    setIsRunning(false)\n                    setIndex(0)\n                    setLeterIndex(0)\n                    setWord('')\n                }}><span>{word + alphabet[index]}</span></motion.li>\n\n            <motion.li className=\"socialMedia fab fa-linkedin-in\"\n                whileHover={{width: '10vw'}}\n                onMouseOver={()=> {\n                    setIsRunning(true)\n                    setSocialMedia('Linkedin.')\n                }}\n                onMouseLeave={()=> {\n                    setIsRunning(false)\n                    setIndex(0)\n                    setLeterIndex(0)\n                    setWord('')\n                }}><span>{word + alphabet[index]}</span></motion.li>\n        </motion.div>\n    </div>\n    )\n}\n\nexport default SideNav\n","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\NavigationBox.jsx",[],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\NavButtons.jsx",["112","113","114","115","116"],"import React,{ useState, useEffect, useRef } from 'react'\nimport \"./NavButtons-style.css\"\nimport { NavLink } from \"react-router-dom\"\nimport { motion } from \"framer-motion\"\n\n\n\n\n\n\nconst NavButtons = () => {\n    const [isRunning, setIsRunning] = useState(false)\n    const [index, setIndex] = useState(0);\n    const [letterIndex, setLeterIndex] = useState(0)\n    const [word, setWord] = useState('')\n    const [link, setLink] = useState('')\n    const alphabet = [\"a\",\"A\",\"b\",\"c\",\"C\",\"d\",\"e\",\"f\",\"g\",\"h\",'H',\"i\",\"j\",\"k\",\"l\",\"m\",\"M\",\"n\",\"o\",\"p\",\"q\",\"r\",\"a\",\"s\",\"t\",\"u\",\"v\",\"w\",\"W\",\"x\",\"y\",\"z\", \" \"];\n\n    useEffect(()=>{\n        var id = window.setInterval(() => {\n            if(isRunning && word !== link){\n                setIndex((prevIndex) => prevIndex + 1)\n\n                if(alphabet[index] === word[letterIndex]){\n                    setLink((prevLink)=>prevLink.concat(word[letterIndex]) )\n                    setIndex(0)\n                    setLeterIndex((prevLeterIndex)=> prevLeterIndex + 1)\n                }\n            }   \n        }, 10);\n        return ()=> clearInterval(id);\n    },[index, letterIndex, link, isRunning])\n\n    if(word == link){\n        var l = link\n    }else{\n        var l = link + alphabet[index]\n    }\n    \n    \n   \n\n\n   \n   \n    return (\n        <nav>\n            <ul className=\"nav-links\">\n            {/* onClick={(e)=>e.target.parentElement.className = \"active\"} */}\n                <NavLink exact to='/' onMouseOver={()=> {setIsRunning(true); setWord(\"Home\")}}\n                        onMouseLeave={()=> {setIsRunning(false);setLink('');setIndex(0);setLeterIndex(0)}}>\n                        <li style={{left:\"20%\"}}>{isRunning && word === \"Home\" ? l : \"Home\"}</li>\n                </NavLink>\n                <NavLink to=\"/about\" onMouseOver={()=> {setIsRunning(true); setWord(\"About\")}}\n                        onMouseLeave={()=> {setIsRunning(false);setLink('');setIndex(0);setLeterIndex(0)}}>\n                        <li style={{left:\"20%\"}}>{isRunning && word === \"About\"  ? l : \"About\"}</li>\n                </NavLink>\n                <NavLink to=\"/my-work\" onMouseOver={()=> {setIsRunning(true); setWord(\"My Work\")}}\n                        onMouseLeave={()=> {setIsRunning(false);setLink('');setIndex(0);setLeterIndex(0)}}>\n                        <li style={{left:\"6%\"}}>{isRunning && word === \"My Work\"  ? l : \"My Work\"}</li>\n                </NavLink>\n                <NavLink to=\"/contact\" onMouseOver={()=> {setIsRunning(true); setWord(\"Contact\")}}\n                        onMouseLeave={()=> {setIsRunning(false);setLink('');setIndex(0);setLeterIndex(0)}}>\n                        <li style={{left:\"10%\"}}>{isRunning && word === \"Contact\"  ? l : \"Contact\"}</li>\n                </NavLink>\n            </ul>\n        </nav>\n    )\n}\n\nexport default NavButtons;","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\myWork\\MyWork.jsx",[],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\home\\Home.jsx",["117"],"import React from 'react'\nimport './home-styles.css'\nfunction Home() {\n    return (\n       <img className='homeImage' src='LogoHN.png'></img>\n    )\n}\n\nexport default Home\n","C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\about\\About.jsx",[],"C:\\Users\\Hugo\\OneDrive\\Área de Trabalho\\Portfolio\\src\\components\\navigationBox\\contact\\Contact.jsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":32,"column":7,"nodeType":"124","endLine":32,"endColumn":37,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":40,"column":7,"nodeType":"124","endLine":40,"endColumn":32,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"118","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","severity":1,"message":"126","line":40,"column":7,"nodeType":"124","endLine":40,"endColumn":32,"suggestions":"134"},{"ruleId":"122","severity":1,"message":"123","line":32,"column":7,"nodeType":"124","endLine":32,"endColumn":37,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":1,"column":37,"nodeType":"130","messageId":"131","endLine":1,"endColumn":43},{"ruleId":"128","severity":1,"message":"129","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"122","severity":1,"message":"137","line":32,"column":7,"nodeType":"124","endLine":32,"endColumn":44,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":34,"column":13,"nodeType":"141","messageId":"142","endLine":34,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":37,"column":13,"nodeType":"130","messageId":"145","endLine":37,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":5,"column":8,"nodeType":"148","endLine":5,"endColumn":52},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alphabet', 'socialMedia', and 'word'. Either include them or remove the dependency array. You can also do a functional update 'setWord(w => ...)' if you only need 'word' in the 'setWord' call.","ArrayExpression",["151"],"React Hook useEffect has missing dependencies: 'alphabet' and 'isRunning'. Either include them or remove the dependency array.",["152"],"no-unused-vars","'motion' is defined but never used.","Identifier","unusedVar",["149"],["150"],["153"],["154"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'alphabet' and 'word'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLink' needs the current value of 'word'.",["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'l' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"156","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [alphabet, index, isRunning, leterIndex, socialMedia, word]",{"range":"164","text":"165"},"Update the dependencies array to be: [alphabet, index, isRunning, leterIndex, word]",{"range":"166","text":"167"},{"range":"168","text":"167"},{"range":"169","text":"165"},"Update the dependencies array to be: [index, letterIndex, link, isRunning, word, alphabet]",{"range":"170","text":"171"},[1239,1269],"[alphabet, index, isRunning, leterIndex, socialMedia, word]",[1181,1206],"[alphabet, index, isRunning, leterIndex, word]",[1142,1167],[1208,1238],[1096,1133],"[index, letterIndex, link, isRunning, word, alphabet]"]